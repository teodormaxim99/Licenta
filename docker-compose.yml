version:  '3.8'
networks:
  nginx-php74-mysql8:

services:
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-licenta-container
    ports:
      - 8080:80
    volumes:
      - ./:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/timeout.conf:/etc/nginx/conf.d/timeout.conf


    depends_on:
      - php74-service
      - mysql8-service
    networks:
      - nginx-php74-mysql8

  php74-service:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: php74-licenta-container
    ports:
      - 9000:9000
    volumes:
      - ./:/var/www/project
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
      - nginx-php74-mysql8

  # mysql
  mysql8-service:
    image: mysql:8
    container_name: mysql8-licenta-container
    platform: linux/x86_64 #macos line --- remove for windows environment
    ports:
      - 4306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql_mode=""
    restart: always # always restart unless stopped manually
    environment:
      MYSQL_ROOT_PASSWORD: "secretpassword"
      MYSQL_PASSWORD: "secretpassword"
    networks:
      - nginx-php74-mysql8

  phpmyadmin-service:
    depends_on:
      - mysql8-service
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-licenta-container
    links:
      - mysql8-service
    restart: always
    ports:
      - 4307:80
    environment:
      UPLOAD_LIMIT: 1G
      PMA_HOST: mysql8-service
      MYSQL_ROOT_PASSWORD: "secretpassword"
    networks:
      - nginx-php74-mysql8
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
